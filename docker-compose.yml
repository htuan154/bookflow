version: '3.8'

services:
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "8080:8000"
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./server:/app
      - /app/node_modules
    networks:
      - app-network

  frontend:
    build:
      context: ./web_app
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - app-network

  db:
    image: postgres:14-alpine
    env_file:
      - .env
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local